export type TAppsmithActionPlugin =
  | TAppsmithRedisPlugin
  | TAppsmithRestApiPlugin
  | TAppsmithGraphQLPlugin
  | TAppsmithSQLPlugin
  | TAppsmithJSPlugin;

export type TAppsmithRedisPlugin = {
  pluginType: "DB";
  pluginId: "redis-plugin";
  unpublishedAction: TAppsmithRedisAction;
  publishedAction: TAppsmithRedisAction;
  id: string;
  deleted: boolean;
  gitSyncId: string;
};

export type TAppsmithRestApiPlugin = {
  pluginType: "API";
  pluginId: "restapi-plugin";
  unpublishedAction: TAppsmithRestApiAction;
  publishedAction: TAppsmithRestApiAction;
  id: string;
  deleted: boolean;
  gitSyncId: string;
};

export type TAppsmithGraphQLPlugin = {
  pluginType: "API";
  pluginId: "graphql-plugin";
  unpublishedAction: TAppsmithGraphQLAction;
  publishedAction: TAppsmithGraphQLAction;
  id: string;
  deleted: boolean;
  gitSyncId: string;
};

export type TAppsmithSQLPlugin = {
  pluginType: "DB";
  pluginId: "postgres-plugin" | "mysql-plugin";
  unpublishedAction: TAppsmithSQLAction;
  publishedAction: TAppsmithSQLAction;
  id: string;
  deleted: boolean;
  gitSyncId: string;
};

export type TAppsmithJSPlugin = {
  pluginType: "JS";
  pluginId: "js-plugin";
  unpublishedAction: TAppsmithJSAction;
  publishedAction: TAppsmithJSAction;
  id: string;
  deleted: boolean;
  gitSyncId: string;
};

export type TAppsmithMinDataSource = {
  name: string;
  pluginId:
    | "postgres-plugin"
    | "mysql-plugin"
    | "redis-plugin"
    | "restapi-plugin"
    | "graphql-plugin";
  messages: any[];
  isAutoGenerated: boolean;
  isTemplate: boolean;
  deleted: boolean;
  gitSyncId: string;
};

export type TAppsmithRestApiDatasource = {
  id?: string;
  name: string;
  pluginId: "restapi-plugin";
  datasourceConfiguration?: { url: string };
  invalids?: [];
  messages: [];
  isAutoGenerated: boolean;
  deleted: boolean;
  policies: [];
  userPermissions: [];
  _isWorkspaceDatasource?: boolean;
};

export type TAppsmithRestApiAction = {
  name: string;
  datasource: TAppsmithRestApiDatasource;
  pageId: string;
  actionConfiguration: {
    timeoutInMillisecond: number;
    paginationType: "NONE";
    path?: string;
    headers: { key: string; value: string }[];
    autoGeneratedHeaders?: { key: string; value: string }[];
    encodeParamsToggle: boolean;
    queryParameters: { key: string; value: string }[];
    httpMethod: "GET" | "POST" | "PUT" | "PATCH" | "DELETE";
    selfReferencingDataPaths: [];
    pluginSpecifiedTemplates: [{ value: boolean }];
    formData: {
      apiContentType:
        | "none"
        | "application/json"
        | "application/x-www-form-urlencoded"
        | "multipart/form-data"
        | "text/plain";
    };
    body?: string;
    bodyFormData: {
      key: string;
      value: string;
      type?: "TEXT" | "FILE" | "ARRAY";
    }[];
  };
  executeOnLoad: boolean;
  dynamicBindingPathList: [];
  isValid: boolean;
  invalids: [];
  messages: [];
  jsonPathKeys: [];
  userSetOnLoad: boolean;
  confirmBeforeExecute: boolean;
  policies: [];
  userPermissions: [];
};

export type TAppsmithGraphQLDatasource = {
  name: string;
  pluginId: "graphql-plugin";
  messages: [];
  isAutoGenerated: boolean;
  id?: string;
  deleted: boolean;
  policies: [];
  userPermissions: [];
  _isWorkspaceDatasource?: boolean;
  datasourceConfiguration?: { url: string };
  invalids?: [];
};

export type TAppsmithGraphQLAction = {
  name: string;
  datasource: TAppsmithGraphQLDatasource;
  pageId: string;
  actionConfiguration: {
    timeoutInMillisecond: number;
    paginationType: "NONE";
    path?: string;
    headers: { key: string; value: string }[];
    encodeParamsToggle: boolean;
    queryParameters: { key: string; value: string }[];
    httpMethod: "POST";
    selfReferencingDataPaths: [];
    pluginSpecifiedTemplates: { value: boolean | string | {} }[];
    formData: {
      apiContentType: "application/json";
    };
    body: string;
  };
  executeOnLoad: boolean;
  dynamicBindingPathList: [];
  isValid: boolean;
  invalids: [];
  messages: [];
  jsonPathKeys: [];
  userSetOnLoad: boolean;
  confirmBeforeExecute: boolean;
  policies: [];
  userPermissions: [];
};

export type TAppsmithSQLDatasource = {
  name: string;
  pluginId: "postgres-plugin" | "mysql-plugin";
  messages: [];
  isAutoGenerated: boolean;
  id: string;
  deleted: boolean;
  policies: [];
  userPermissions: [];
  _isWorkspaceDatasource?: boolean;
};

export type TAppsmithRedisAction = {
  name: string;
  datasource: {
    name: string;
    pluginId: "redis-plugin";
    messages: [];
    isAutoGenerated: boolean;
    id: string;
    deleted: boolean;
    policies: [];
    userPermissions: [];
    _isWorkspaceDatasource?: boolean;
  };
  pageId: string;
  actionConfiguration: {
    timeoutInMillisecond: number;
    paginationType: "NONE";
    encodeParamsToggle: boolean;
    selfReferencingDataPaths: [];
    body?: string;
  };
  executeOnLoad: boolean;
  dynamicBindingPathList: [];
  isValid: boolean;
  invalids: [];
  messages: [];
  jsonPathKeys: [];
  userSetOnLoad: boolean;
  confirmBeforeExecute: boolean;
  policies: [];
  userPermissions: [];
};

export type TAppsmithSQLAction = {
  name: string;
  datasource: TAppsmithSQLDatasource;
  pageId: string;
  actionConfiguration: {
    timeoutInMillisecond: number;
    paginationType: "NONE";
    encodeParamsToggle: boolean;
    body: string;
    selfReferencingDataPaths: [];
    pluginSpecifiedTemplates: [{ value: boolean }];
  };
  executeOnLoad: boolean;
  dynamicBindingPathList: [];
  isValid: boolean;
  invalids: [];
  messages: [];
  jsonPathKeys: [];
  userSetOnLoad: boolean;
  confirmBeforeExecute: boolean;
  policies: [];
  userPermissions: [];
};

export type TAppsmithJSDatasource = {
  name: "UNUSED_DATASOURCE";
  pluginId: "js-plugin";
  messages: [];
  isAutoGenerated: boolean;
  deleted: boolean;
  policies: [];
  userPermissions: [];
};

export type TAppsmithJSAction = {
  name: string;
  fullyQualifiedName: string;
  datasource: TAppsmithJSDatasource;
  pageId: string;
  collectionId: string;
  actionConfiguration: {
    timeoutInMillisecond: number;
    paginationType: "NONE";
    encodeParamsToggle: boolean;
    body: string;
    selfReferencingDataPaths: [];
    jsArguments: { [key: string]: string }[];
    isAsync: boolean;
  };
  executeOnLoad: boolean;
  dynamicBindingPathList: [{ key: "body" }];
  isValid: boolean;
  invalids: [];
  messages: [];
  jsonPathKeys: string[];
  userSetOnLoad: boolean;
  confirmBeforeExecute: boolean;
  policies: [];
  userPermissions: [];
};
